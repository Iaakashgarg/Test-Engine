package adminui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.beans.PropertyVetoException;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import project.dao.SubjectInfoDAO;
import project.to.SubjectInfoTO;

public class ViewSubjectDetails extends javax.swing.JInternalFrame {

    List<SubjectInfoTO> subjects;
    private JPopupMenu popupmenu;
    private int row;

    public ViewSubjectDetails() {
        initComponents();
        bindTables();
        popupmenu = new JPopupMenu();
        JMenuItem deleteitem = new JMenuItem("Delete This Record");
        try {
            ImageIcon icon;
            icon = new ImageIcon(getClass().getResource("/adminui/delete.png"));
            deleteitem.setIcon(icon);
        } catch (Exception ex) {
        }
        popupmenu.add(deleteitem);
        JMenuItem edititem = new JMenuItem("Edit This Record");
        try {
            ImageIcon icon;
            icon = new ImageIcon(getClass().getResource("/adminui/update1.png"));
            edititem.setIcon(icon);
        } catch (Exception ex) {
        }
        popupmenu.add(edititem);
        deleteitem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                deleterecord();
            }
        });
        edititem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                editrecord();
            }
        });
        row = -1;
    }

    public void editrecord() {
        if (row != -1 && subjects != null && row < subjects.size()) {
            AddNewSubject ans = new AddNewSubject(subjects.get(row));
            ans.setVisible(true);
            getDesktopPane().add(ans);
            try {
                ans.setSelected(true);
            } catch (PropertyVetoException ex) {
            }
            dispose();
        }
        row = -1;
    }

    public void deleterecord() {
        if (row != -1 && subjects != null && row < subjects.size()) {
            int result = JOptionPane.showConfirmDialog(this, "Are You Sure To Delete This Record?", "Message From System", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                SubjectInfoTO record = subjects.get(row);
                SubjectInfoDAO action = new SubjectInfoDAO();
                String message = "";
                if (action.deleteRecord(record.getSubjectid())) {
                    message = "Record is Removed From DataBase";
                    bindTables();
                } else {
                    if (action.getErrormessage().contains("foreign")) {
                        message = "Foreign Key Failure\n\nAttempt to Delete Primary Row ";
                    } else {
                        message = "Deletion Failure Due TO " + action.getErrormessage();
                    }
                }
                JOptionPane.showMessageDialog(this, message);
            }
        }
        row = -1;
    }

    public void bindTables() {
        subjects = new SubjectInfoDAO().getAllRecord();
        String[] colnames = {"Subject ID", "Subject Name", "Description"};
        Object[][] records = null;
        if (subjects != null && subjects.size() > 0) {
            records = new Object[subjects.size()][colnames.length];
            int i = 0;
            for (SubjectInfoTO sit : subjects) {
                records[i] = new Object[]{sit.getSubjectid(), sit.getSubjectname(), sit.getDescription()};
                i++;
            }
        } else {
            records = new Object[1][colnames.length];
            records[0] = new Object[]{"No Record", "No Record", "No Record"};
        }
        DefaultTableModel dtm = new DefaultTableModel(records, colnames);
        tableSubject.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableSubject = new javax.swing.JTable();
        btnLoad = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("View Subject Details");

        tableSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSubjectMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableSubject);

        btnLoad.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnLoad.setText("Load Again");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 669, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(115, 115, 115)
                        .add(btnLoad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 480, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 334, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(btnLoad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        bindTables();
    }//GEN-LAST:event_btnLoadActionPerformed

    private void tableSubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSubjectMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            int rowatpoint = tableSubject.rowAtPoint(evt.getPoint());
            tableSubject.getSelectionModel().setSelectionInterval(rowatpoint, rowatpoint);
            popupmenu.show(tableSubject, evt.getX(), evt.getY());
            row = tableSubject.getSelectedRow();
        }
    }//GEN-LAST:event_tableSubjectMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoad;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableSubject;
    // End of variables declaration//GEN-END:variables

}
