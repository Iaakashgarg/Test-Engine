package adminui;

import java.beans.PropertyVetoException;
import javax.swing.JOptionPane;
import operations.Validations;
import project.dao.SubjectInfoDAO;
import project.to.SubjectInfoTO;

public class AddNewSubject extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddNewSubject
     */
    public AddNewSubject() {
        initComponents();
    }

    public AddNewSubject(SubjectInfoTO record) {
        this();
        if (record != null) {
            setTitle("Update Subject Details");
            btnadd.setText("Update Subject Details");
            jtfSubjectID.setText(record.getSubjectid());
            jtfSubjectName.setText(record.getSubjectname());
            jtfDescription.setText(String.valueOf(record.getDescription()));
            jtfSubjectID.setEditable(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfSubjectName = new javax.swing.JTextField();
        jtfDescription = new javax.swing.JTextField();
        jtfSubjectID = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("IMS::Add New Subject Details");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Enter Subject ID:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Enter Description:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Enter Subject Name:");

        jtfSubjectName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jtfSubjectName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfSubjectNameKeyTyped(evt);
            }
        });

        jtfDescription.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jtfSubjectID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        btnadd.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnadd.setText("Add New Subject");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(41, 41, 41))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfSubjectID, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfSubjectID, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        String message = "";
        boolean allvalid = true;
        String subjectid = jtfSubjectID.getText().trim();
        String subjectname = jtfSubjectName.getText().trim();
        String description = jtfDescription.getText().trim();
        if (Validations.isEmpty(subjectid)) {
            allvalid = false;
            message = "Please Enter Subject ID\n\n";
        }
        if (Validations.isEmpty(subjectname)) {
            allvalid = false;
            message += "Please Fill Any Value in Subject Name Box\n\n";
        }
        if (Validations.isEmpty(description)) {
            allvalid = false;
            message += "Please Fill Any Value in Description Box\n\n";
        }
        if (allvalid) {
            SubjectInfoTO record = new SubjectInfoTO();
            record.setSubjectid(subjectid);
            record.setSubjectname(subjectname);
            record.setDescription(description);
            SubjectInfoDAO action = new SubjectInfoDAO();
            if (btnadd.getText().contains("Add")) {
                if (action.insertRecord(record)) {
                    message = "New Subject is Added in System";
                } else {
                    if (action.getErrormessage().contains("key")) {
                        message = "Primary Key Failure\n\nAttempt for Duplicate Entry ";
                    } else {
                        message = "Insertion Failure Due TO " + action.getErrormessage();
                    }
                }
            } else if (btnadd.getText().contains("Update")) {
                if (action.updateRecord(record)) {
                    message = "Subject is Updated in System";
                } else {
                    if (action.getErrormessage().contains("foreign")) {
                        message = "Foreign Key Failure\n\nAttempt to Update Primary Row ";
                    } else {
                        message = "Updation Failure Due TO " + action.getErrormessage();
                    }
                }
                ViewSubjectDetails vsd = new ViewSubjectDetails();
                vsd.setVisible(true);
                getDesktopPane().add(vsd);
                try {
                    vsd.setSelected(true);
                } catch (PropertyVetoException ex) {
                }
                dispose();
            } else {
                message = "There is No Default Operations";
            }
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnaddActionPerformed

    private void jtfSubjectNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSubjectNameKeyTyped
        if (Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfSubjectNameKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jtfDescription;
    private javax.swing.JTextField jtfSubjectID;
    private javax.swing.JTextField jtfSubjectName;
    // End of variables declaration//GEN-END:variables
}
