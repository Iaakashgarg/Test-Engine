package adminui;

import java.beans.PropertyVetoException;
import java.util.List;
import javax.swing.JOptionPane;
import operations.Validations;
import project.dao.QuestionInfoDAO;
import project.dao.SectionInfoDAO;
import project.dao.SubjectInfoDAO;
import project.dao.TestInfoDAO;
import project.to.QuestionInfoTO;
import project.to.SectionInfoTO;
import project.to.SubjectInfoTO;
import project.to.TestInfoTO;

public class AddNewQuestion extends javax.swing.JInternalFrame {

    private int questionid;

    public AddNewQuestion() {
        initComponents();
        jcbSubjectID.removeAllItems();
        jcbSectionID.removeAllItems();
        jcbTestID.removeAllItems();
        jcbSubjectID.addItem("Choose Any Subject ID");
        jcbSectionID.addItem("Choose Any Section ID");
        jcbAnswer.addItem("Choose Correct Answer");
        
        List<SubjectInfoTO> subjectid = new SubjectInfoDAO().getAllRecord();
        if (subjectid != null && subjectid.size() > 0) {
            for (SubjectInfoTO sit : subjectid) {
                jcbSubjectID.addItem(sit);
            }
        }
        
        List<SectionInfoTO> sectionid = new SectionInfoDAO().getAllRecord();
        if (sectionid != null && sectionid.size() > 0) {
            for (SectionInfoTO sit : sectionid) {
                jcbSectionID.addItem(sit);
            }
        }

        jcbAnswer.addItem("A");
        jcbAnswer.addItem("B");
        jcbAnswer.addItem("C");
        jcbAnswer.addItem("D");
    }

    public AddNewQuestion(QuestionInfoTO record) {
        this();
        if (record != null) {
            setTitle("Update Question Details");
            questionid = record.getQuestionid();
            btnAddQuestion.setText("Update Question Details");
            jtfQuestionText.setText(record.getQuestiontext());
            jtfOptionA.setText(record.getOptiona());
            jtfOptionB.setText(record.getOptionb());
            jtfOptionC.setText(record.getOptionc());
            jtfOptionD.setText(record.getOptiond());

            for (int i = 1; i < jcbTestID.getItemCount(); i++) {
                TestInfoTO tit = (TestInfoTO) jcbTestID.getItemAt(i);
                if (tit.getTestid() == (record.getTestid())) {
                    jcbTestID.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 1; i < jcbSectionID.getItemCount(); i++) {
                SectionInfoTO sit = (SectionInfoTO) jcbSectionID.getItemAt(i);
                if (sit.getSectionid() == record.getSectionid()) {
                    jcbSectionID.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 1; i < jcbAnswer.getItemCount(); i++) {
                String st = jcbAnswer.getItemAt(i).toString();
                if (st.equalsIgnoreCase(record.getAnswer())) {
                    jcbAnswer.setSelectedIndex(i);
                    break;
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnAddQuestion = new javax.swing.JButton();
        jcbTestID = new javax.swing.JComboBox();
        jcbSectionID = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtfQuestionText = new javax.swing.JTextArea();
        jtfOptionA = new javax.swing.JTextField();
        jtfOptionC = new javax.swing.JTextField();
        jtfOptionD = new javax.swing.JTextField();
        jtfOptionB = new javax.swing.JTextField();
        jcbAnswer = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jcbSubjectID = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add New Question");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Choose Section ID:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Choose Test ID:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Enter Question Text:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Enter Option B:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Enter Option A:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("Enter Option C:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("Enter Option D:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("Enter Answer:");

        btnAddQuestion.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnAddQuestion.setText("Add New Question");
        btnAddQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddQuestionActionPerformed(evt);
            }
        });

        jcbSectionID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbSectionIDItemStateChanged(evt);
            }
        });

        jtfQuestionText.setColumns(20);
        jtfQuestionText.setRows(5);
        jScrollPane1.setViewportView(jtfQuestionText);

        jcbAnswer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setText("Choose Subject ID:");

        jcbSubjectID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbSubjectIDItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbTestID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbSectionID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addComponent(jtfOptionA)
                    .addComponent(jtfOptionB)
                    .addComponent(jtfOptionC)
                    .addComponent(jtfOptionD)
                    .addComponent(jcbAnswer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbSubjectID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(220, Short.MAX_VALUE)
                .addComponent(btnAddQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jcbSubjectID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbSectionID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jcbTestID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfOptionA, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfOptionB, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfOptionC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfOptionD, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddQuestionActionPerformed
        String message = "";
        boolean allvalid = true;
        String questiontext = jtfQuestionText.getText().trim();
        String optiona = jtfOptionA.getText().trim();
        String optionb = jtfOptionB.getText().trim();
        String optionc = jtfOptionC.getText().trim();
        String optiond = jtfOptionD.getText().trim();

        if (jcbTestID.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please Choose Any Test ID\n\n";
        }
        if (jcbSectionID.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please Choose Any Section ID\n\n";
        }
        if (Validations.isEmpty(questiontext)) {
            allvalid = false;
            message += "Please Fill Any Value in Question Text Box\n\n";
        }

        if (Validations.isEmpty(optiona)) {
            allvalid = false;
            message += "Please Fill Any Value in OptionA Box\n\n";
        }
        if (Validations.isEmpty(optionb)) {
            allvalid = false;
            message += "Please Fill Any Value in OptionB Box\n\n";
        }
        if (Validations.isEmpty(optionc)) {
            allvalid = false;
            message += "Please Fill Any Value in OptionC Box\n\n";
        }
        if (Validations.isEmpty(optiond)) {
            allvalid = false;
            message += "Please Fill Any Value in OptionD Box\n\n";
        }
        if (jcbAnswer.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please Choose Any Answer\n\n";
        }
        if (allvalid) {
            QuestionInfoTO record = new QuestionInfoTO();
            TestInfoTO tit = (TestInfoTO) jcbTestID.getSelectedItem();
            SectionInfoTO sit = (SectionInfoTO) jcbSectionID.getSelectedItem();
            String answer = jcbAnswer.getSelectedItem().toString();
            record.setTestid(tit.getTestid());
            record.setSectionid(sit.getSectionid());
            record.setQuestiontext(questiontext);
            record.setOptiona(optiona);
            record.setOptionb(optionb);
            record.setOptionc(optionc);
            record.setOptiond(optiond);
            record.setAnswer(answer);

            QuestionInfoDAO action = new QuestionInfoDAO();
            if (btnAddQuestion.getText().contains("Add")) {
                if (action.insertRecord(record)) {
                    message = "New Question is Added in System";
                } else {
                    message = " Insertion Failure : " + action.getErrormessage();
                }
            } else {
                if (btnAddQuestion.getText().contains("Update")) {
                    record.setQuestionid(questionid);
                    if (action.updateRecord(record)) {
                        message = "Question Record is Updated in System";
                    } else {
                        if (action.getErrormessage().contains("foreign")) {
                            message = "Foreign Key Failure\n\nAttempt to Update Primary Row ";
                        } else {
                            message = "Updation Failure Due TO " + action.getErrormessage();
                        }
                    }
                    ViewQuestionDetails vqd = new ViewQuestionDetails();
                    vqd.setVisible(true);
                    getDesktopPane().add(vqd);
                    try {
                        vqd.setSelected(true);
                    } catch (PropertyVetoException ex) {
                    }
                    dispose();
                }
            }
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnAddQuestionActionPerformed

    private void jcbSectionIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbSectionIDItemStateChanged
      /*  jcbTestID.removeAllItems();
        jcbTestID.addItem("Choose Any Test ID");
        if (jcbSectionID.getSelectedIndex() > 0) {
            SectionInfoTO sit = (SectionInfoTO) jcbSectionID.getSelectedItem();
            List<TestInfoTO> testid = new TestInfoDAO().getAllRecord(sit.getSectionid());
            if (testid != null && testid.size() > 0) {
                for (TestInfoTO tit : testid) {
                    jcbTestID.addItem(tit);
                }
            }
    }//GEN-LAST:event_jcbSectionIDItemStateChanged
 */   }
    private void jcbSubjectIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbSubjectIDItemStateChanged
        jcbSectionID.removeAllItems();
        jcbSectionID.addItem("Choose Any Section ID");
        jcbTestID.removeAllItems();
        jcbTestID.addItem("Choose Any Test ID");
        if (jcbSubjectID.getSelectedIndex() > 0) {
            SubjectInfoTO sit = (SubjectInfoTO) jcbSubjectID.getSelectedItem();
            List<SectionInfoTO> sections = new SectionInfoDAO().getAllRecord(sit.getSubjectid());
            if(sections!=null && sections.size()>0){
                for(SectionInfoTO st : sections){
                    jcbSectionID.addItem(st);
                }
            }
            List<TestInfoTO> tests = new TestInfoDAO().getAllRecord(sit.getSubjectid());
            if(tests!=null && tests.size()>0){
                for(TestInfoTO ti : tests){
                    jcbTestID.addItem(ti);
                }
            }
        }
    }//GEN-LAST:event_jcbSubjectIDItemStateChanged
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddQuestion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbAnswer;
    private javax.swing.JComboBox jcbSectionID;
    private javax.swing.JComboBox jcbSubjectID;
    private javax.swing.JComboBox jcbTestID;
    private javax.swing.JTextField jtfOptionA;
    private javax.swing.JTextField jtfOptionB;
    private javax.swing.JTextField jtfOptionC;
    private javax.swing.JTextField jtfOptionD;
    private javax.swing.JTextArea jtfQuestionText;
    // End of variables declaration//GEN-END:variables
}
